# This file is automatically generated by the Open Roberta Lab.
const _M_MAX = 5
const _RGB_DIV = 8
const _LED_DIV = 3

var _A               # helper variable to store results of type number
var _B[1]            # helper variable to store results from the left side of a binary expression
var _C[1]            # helper variable to store results from the right side of a binary expression
var _state = 0       # current state of the program flow
var _time            # current elapsed time
var _timer = 0       # overall elapsed time from timer 1

var ___x = 0

timer.period[0] = 10 # ms time between state executions

onevent timer0
    _timer += 10
    if _state == 0 then
        _timer = 0
        _state = 1
    elseif _state == 1 then
        _A = button.forward
        _B[0] = _A
        _A = 1
        _C[0] = _A
        if _B[0] == _C[0] then
            _A = 1
        else
            _A = 0
        end
        if _A == 1 then
            _state = 2
        else
            _A = (1500 - prox.ground.reflected[0]) / 1000
            _B[0] = _A
            _A = 1
            _C[0] = _A
            if _B[0] == _C[0] then
                _A = 1
            else
                _A = 0
            end
            if _A == 1 then
                _state = 3
            else
                _A = prox.ground.reflected[0] / 45
                _B[0] = _A
                _A = 50
                _C[0] = _A
                if _B[0] > _C[0] then
                    _A = 1
                else
                    _A = 0
                end
                if _A == 1 then
                    _state = 4
                else
                    _A = prox.ground.ambiant[0] / 2
                    _B[0] = _A
                    _A = 30
                    _C[0] = _A
                    if _B[0] > _C[0] then
                        _A = 1
                    else
                        _A = 0
                    end
                    if _A == 1 then
                        _state = 5
                    else
                        _A = (100 - prox.horizontal[0] / 45)
                        _B[0] = _A
                        _A = 50
                        _C[0] = _A
                        if _B[0] < _C[0] then
                            _A = 1
                        else
                            _A = 0
                        end
                        if _A == 1 then
                            _state = 6
                        else
                            _A = mic.intensity * 100 / 255
                            _B[0] = _A
                            _A = 50
                            _C[0] = _A
                            if _B[0] > _C[0] then
                                _A = 1
                            else
                                _A = 0
                            end
                            if _A == 1 then
                                _state = 7
                            else
                                _A = _timer
                                _B[0] = _A
                                _A = 500
                                _C[0] = _A
                                if _B[0] > _C[0] then
                                    _A = 1
                                else
                                    _A = 0
                                end
                                if _A == 1 then
                                    _state = 8
                                else
                                    _A = acc[0]
                                    _B[0] = _A
                                    _A = 30
                                    _C[0] = _A
                                    if _B[0] < _C[0] then
                                        _A = 1
                                    else
                                        _A = 0
                                    end
                                    if _A == 1 then
                                        _state = 9
                                    else
                                        _A = temperature / 10
                                        _B[0] = _A
                                        _A = 20
                                        _C[0] = _A
                                        if _B[0] < _C[0] then
                                            _A = 1
                                        else
                                            _A = 0
                                        end
                                        if _A == 1 then
                                            _state = 10
                                        else
                                            _A = 0
                                            _B[0] = _A
                                            _A = 1
                                            _C[0] = _A
                                            if _B[0] == 1 or _C[0] == 1 then
                                                _A = 1
                                            else
                                                _A = 0
                                            end
                                            if _A == 1 then
                                                _state = 11
                                            else
                                                _A = (29 + acc[1]) / 32
                                                _B[0] = _A
                                                _A = 1
                                                _C[0] = _A
                                                if _B[0] == _C[0] then
                                                    _A = 1
                                                else
                                                    _A = 0
                                                end
                                                if _A == 1 then
                                                    _state = 12
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    elseif _state == 2 then
        _A = button.right
        ___x = _A
        _state = 13
    elseif _state == 3 then
        _A = (1500 - prox.ground.reflected[1]) / 1000
        ___x = _A
        _state = 13
    elseif _state == 4 then
        _A = prox.ground.reflected[1] / 45
        ___x = _A
        _state = 13
    elseif _state == 5 then
        _A = prox.ground.ambiant[1] / 2
        ___x = _A
        _state = 13
    elseif _state == 6 then
        _A = (100 - prox.horizontal[1] / 45)
        ___x = _A
        _state = 13
    elseif _state == 7 then
        _A = mic.intensity * 100 / 255
        ___x = _A
        _state = 13
    elseif _state == 8 then
        _A = _timer
        ___x = _A
        _state = 13
    elseif _state == 9 then
        _A = acc[0]
        ___x = _A
        _state = 13
    elseif _state == 10 then
        _A = temperature / 10
        ___x = _A
        _state = 13
    elseif _state == 11 then
        _A = 1
        call sound.record(_A)
        call sound.record(-1)
        _state = 13
    elseif _state == 12 then
        _A = (29 + acc[1]) / 32
        ___x = _A
        _state = 13
    elseif _state == 13 then
        callsub thymio_close
    end

sub thymio_close
    timer.period[0] = 0
    